/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    int getleftheight(TreeNode *node){
       
        TreeNode *temp = node;
        int lh=0;
        while(temp){
            temp=temp->left;
            lh++;
        }
        return lh;
    }

    int getrightheight(TreeNode *node){
     
        TreeNode *temp = node;
        int rh =0;
        while(temp){
            temp=temp->right;
            rh++;
        }
        return rh;
    }
    int goodNodes(TreeNode* root) {
        if(root == NULL) return 0;
        int leftheight = getleftheight(root->left);
        int rightheight = getrightheight(root->right);
        if(leftheight == rightheight){
            return (pow(2, leftheight)-1);
        } else{
            return goodNodes(root->left) + goodNodes(root->right)+1;
        }
    }
};
