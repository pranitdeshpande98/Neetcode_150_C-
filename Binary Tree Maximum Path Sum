/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
int result;
    int solve(TreeNode *root){
        if(root == NULL) return 0;
        int leftsum = solve(root->left);
        int rightsum = solve(root->right);

        int only_one_path = max(leftsum, rightsum) + root->val;
        int only_root = root->val;
        int converge = leftsum + rightsum + root->val;

        result = max({result, only_one_path, only_root, converge});
        return max(only_one_path, only_root);
    }
    int maxPathSum(TreeNode* root) {
        result = INT_MIN;
        solve(root);
        return result;
    }
};
