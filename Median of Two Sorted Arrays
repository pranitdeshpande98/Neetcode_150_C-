class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size();
        int n = nums2.size();

        if(m > n){
            return findMedianSortedArrays(nums2, nums1);
        }

        int low = 0;
        int high = m;

        while(low <= high){
            int Px = (low+high) / 2; // from nums1
            int Py = (m+n+1)/2-Px; // from nums2

            int x1 = (Px == 0) ? INT_MIN : nums1[Px-1]; //left 
            int x2 = (Py == 0) ? INT_MIN : nums2[Py-1]; // left
            int x3 = (Px == m) ? INT_MAX : nums1[Px]; // right
            int x4 = (Py == n) ? INT_MAX : nums2[Py]; //right

            if(x1 <= x4 && x2 <= x3){
                if((m+n) % 2 ==1) return max(x1, x2);
            
            return (max(x1, x2) + min(x3, x4)) / 2.0;
            }
            if(x1 > x4){
                high = Px-1;
            } else {
                low = Px+1;
            }

        }
        return -1;
    }
};
