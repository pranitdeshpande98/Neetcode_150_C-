/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1 == NULL) return list2;

        if(list2==NULL) return list1;

        ListNode* result = new ListNode(-1);
        ListNode* result_ptr = result;

        while(list1 && list2){
            if(list1->val <= list2->val){
                result_ptr->next = list1;
                list1=list1->next;
            }
            else{
                result_ptr->next = list2;
                list2=list2->next;
            }
            result_ptr=result_ptr->next;
        }
        
        if(list1){
            result_ptr->next = list1;
        }

        if(list2){
            result_ptr->next = list2;
        }
        return result->next;
    }
};
