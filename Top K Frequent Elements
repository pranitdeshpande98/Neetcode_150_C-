class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int>mp;
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;

        for(auto &num: nums){
            mp[num]++;
        }

        for(auto &itr: mp){
            pq.push({itr.second, itr.first});
            if(pq.size() > k){
                pq.pop();
            }
        }
        vector<int> result;
        while(!pq.empty()){
            auto temp = pq.top();
            result.push_back(temp.second);
            pq.pop();
        }
        return result;
    }
};
