class Solution {
public:

    long long func(vector<int> &piles , int hour){
        int n = piles.size();
        long long totalHours = 0;
        for(int i = 0 ; i < n ; i++){
            totalHours += ceil((double)piles[i] / (double)hour);
        }
        return totalHours;
    }

    int minEatingSpeed(vector<int>& piles, int h) {
        int high = *max_element(piles.begin(), piles.end());
        int low = 1;
        while(low <= high){
            int mid = (low + high)/2;
            long long totalHrs = func(piles ,mid);
            if(totalHrs <= h){
                high = mid - 1;
            }else{
                low = mid + 1;
            }
        }
        return low;    
    }
};
